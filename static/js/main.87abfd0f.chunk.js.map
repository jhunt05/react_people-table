{"version":3,"sources":["components/Api/Fetching.js","components/person/Person.js","components/peopleTable/PeopleTable.js","components/filter/Filter.js","App.js","index.js"],"names":["peopleList","fetch","then","response","json","Person","_ref","person","selectLine","selectedLine","react_default","a","createElement","className","classNames","active","onClick","id","name","sex","born","died","age","century","mother","father","PeopleTable","state","_this","setState","_this2","this","_this$props","props","people","sort","map","person_Person","key","React","Component","Filter","onValueChanged","type","placeholder","onChange","event","target","value","aria-hidden","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getSortedPeople","createSelector","search","sortMethod","lowerCaseSearch","toLowerCase","filteredPeople","filter","includes","b","localeCompare","Promise","all","slicedToArray","_objectSpread","Math","ceil","_this3","filter_Filter","trim","peopleTable_PeopleTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.87abfd0f.chunk.js","sourcesContent":["const api\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst getData = url => fetch(url)\n  .then(response => response.json());\n\nconst peopleList\n  = getData(api);\n\nexport default peopleList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Person = ({ person, selectLine, selectedLine }) => (\n  <tr\n    className={classNames({\n      active: selectedLine,\n    })}\n    onClick={() => selectLine(person.id)}\n  >\n    <td>{person.id}</td>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td className={person.age > 65 ? 'positive' : null}>\n      {person.age}\n    </td>\n    <td>{person.century}</td>\n    <td>{person.mother}</td>\n    <td>{person.father}</td>\n  </tr>\n);\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string.isRequired,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    mother: PropTypes.string,\n    father: PropTypes.string,\n    age: PropTypes.number.isRequired,\n    century: PropTypes.number.isRequired,\n  }).isRequired,\n  selectedLine: PropTypes.number.isRequired,\n  selectLine: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from '../person/Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectedLine: null,\n  };\n\n  selectLine = (id) => {\n    this.setState({\n      selectedLine: id,\n    });\n  };\n\n  render() {\n    const { people, sort } = this.props;\n    const { selectedLine } = this.state;\n\n    return (\n      <table className=\"ui table celled fixed sortable\">\n        <thead>\n          <tr>\n            <th\n              className=\"one wide\"\n              onClick={() => sort('id')}\n            >\n              Id\n            </th>\n            <th\n              onClick={() => sort('name')}\n            >\n              Name\n            </th>\n            <th\n              onClick={() => sort('sex')}\n            >\n              Sex\n            </th>\n            <th\n              onClick={() => sort('born')}\n            >\n              Born\n            </th>\n            <th\n              className=\"sort-btn\"\n              onClick={() => sort('died')}\n            >\n              Died\n            </th>\n            <th\n              onClick={() => sort('age')}\n            >\n              Age\n            </th>\n            <th\n              onClick={() => sort('century')}\n            >\n              Century\n            </th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              selectedLine={person.id === selectedLine}\n              selectLine={this.selectLine}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ onValueChanged }) {\n  const onInputChange = (event) => {\n    onValueChanged(event.target.value);\n  };\n\n  return (\n    <div className=\"ui icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Who are you looking for?\"\n        onChange={onInputChange}\n      />\n      <i aria-hidden=\"true\" className=\"search circular inverted link icon\" />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onValueChanged: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport { createSelector } from 'reselect';\nimport './App.css';\n\nimport peopleList from './components/Api/Fetching';\nimport PeopleTable from './components/peopleTable/PeopleTable';\nimport Filter from './components/filter/Filter';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      people: [],\n      search: '',\n      sortMethod: '',\n    };\n  }\n\n  getSortedPeople = createSelector(\n    [\n      state => state.people,\n      state => state.search,\n      state => state.sortMethod,\n    ],\n    (people, search, sortMethod) => {\n      const lowerCaseSearch = search.toLowerCase();\n      const filteredPeople = people\n        .filter(person => person.name.toLowerCase().includes(lowerCaseSearch)\n          || (person.mother || '').toLowerCase().includes(lowerCaseSearch)\n          || (person.father || '').toLowerCase().includes(lowerCaseSearch));\n\n      switch (sortMethod) {\n        case 'id':\n          return filteredPeople.sort((a, b) => a.id - b.id);\n        case 'name':\n          return filteredPeople.sort((a, b) => a.name.localeCompare(b.name));\n        case 'sex':\n          return filteredPeople.sort((a, b) => a.sex.localeCompare(b.sex));\n        case 'born':\n          return filteredPeople.sort((a, b) => a.born - b.born);\n        case 'died':\n          return filteredPeople.sort((a, b) => a.died - b.died);\n        case 'age':\n          return filteredPeople.sort((a, b) => a.age - b.age);\n        case 'century':\n          return filteredPeople.sort((a, b) => a.century - b.century);\n        default:\n          return filteredPeople;\n      }\n    }\n  );\n\n  componentDidMount() {\n    Promise.all([peopleList]).then(([people]) => {\n      let id = 0;\n\n      this.setState({\n        people: people.map((person) => {\n          id += 1;\n\n          return ({\n            id,\n            ...person,\n            age: person.died - person.born,\n            century: Math.ceil(person.died / 100),\n          });\n        }),\n      });\n    });\n  }\n\n  sort = (type) => {\n    this.setState({\n      sortMethod: type,\n    });\n  };\n\n  render() {\n    const people = this.getSortedPeople(this.state);\n\n    return (\n      <div className=\"container\">\n        <Filter\n          onValueChanged={value => this.setState({ search: value.trim() })}\n        />\n        <PeopleTable\n          people={people}\n          sort={this.sort}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}